AWSTemplateFormatVersion: "2010-09-09"
Description: Digital Identity IPV HMRC OAuth Token Generator
Transform: [AWS::LanguageExtensions, AWS::Serverless-2016-10-31]

Parameters:
  SandboxOAuthUrl:
    Type: String
    Default: https://test-api.service.hmrc.gov.uk/oauth/token
  ProductionOAuthUrl:
    Type: String
    Default: https://api.service.hmrc.gov.uk/oauth/token
  Environment:
    Type: String
    Default: dev
    AllowedValues: [localdev, dev, build, staging, integration, production]
  CodeSigningConfigArn:
    Type: String
    Default: ""
  PermissionsBoundary:
    Type: String
    Default: ""
  DeployAlarmsInDev:
    Description: Set to the string value `true` to deploy alarms in a DEV environment
    Type: String
    Default: "false"
  VpcStackName:
    Type: String
    Default: otg-vpc
  AllowedVpcEndpointIds:
    Type: AWS::SSM::Parameter::Value<String>
    Description: The SSM parameter containing the list of VPC endpoints allowed to invoke the private API
    Default: /otg-hmrc/config/AllowedVPCEndpointIDs
  LambdaDeploymentPreference:
    Description: "Specifies the configuration to enable gradual Lambda deployments"
    Type: String
    Default: "AllAtOnce"
  StepFunctionsDeploymentPreference:
    Description: "Specifies the configuration to enable gradual StepFunction deployments"
    Type: String
    Default: "ALL_AT_ONCE"
    AllowedValues:
      - ALL_AT_ONCE
      - CANARY
      - LINEAR

Conditions:
  EnforceCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, ""]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, ""]]
  IsDevEnvironment: !Equals [!Ref Environment, dev]
  IsLocalDevEnvironment: !Equals [!Ref Environment, localdev]
  IsDevLikeEnvironment: !Or [!Condition IsLocalDevEnvironment, !Condition IsDevEnvironment]
  IsProdOrIntegrationEnvironment: !Or [!Condition IsProdEnvironment, !Equals [!Ref Environment, integration]]
  IsProdEnvironment: !Equals [!Ref Environment, production]
  IsNotProdOrIntegrationEnvironment: !Not [!Condition IsProdOrIntegrationEnvironment]
  IsNotDevLikeEnvironment: !Not [!Condition IsDevLikeEnvironment]
  IsNotProdEnvironment: !Not [!Condition IsProdEnvironment]
  DeployAlarms: !Or [!Condition IsProdEnvironment, !Equals [!Ref DeployAlarmsInDev, true]]
  DeployNonProdAlarms: !And
      - !Condition IsNotProdEnvironment
      - !Condition DeployAlarms
  UseCanaryDeploymentAlarms: !Or
    - !Not [!Equals [!Ref StepFunctionsDeploymentPreference, ALL_AT_ONCE]]
    - !Not [!Equals [!Ref LambdaDeploymentPreference, AllAtOnce]]

Mappings:
  StaticVariables:
    Urls:
      SupportManualURL: "https://team-manual.account.gov.uk/teams/CRI-Orange-team/supporting-cri-orange/hmrc-otg-runbook/"

  Dynatrace:
    SecretArn:
      dev: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      build: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      staging: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      integration: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      production: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

  PlatformConfiguration:
    dev:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    build:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    staging:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    integration:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2
    production:
      CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2

  SchedulerConfig:
    dev:
      NumRetries: 3
      RetryDelaySeconds: 600
    build:
      NumRetries: 185
      RetryDelaySeconds: 600
    staging:
      NumRetries: 185
      RetryDelaySeconds: 600
    integration:
      NumRetries: 185
      RetryDelaySeconds: 600
    production:
      NumRetries: 185
      RetryDelaySeconds: 86400

Globals:
  Function:
    Timeout: 30
    CodeUri: ..
    Runtime: nodejs22.x
    Architectures: [arm64]
    PermissionsBoundary:
      !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
    VpcConfig:
      SecurityGroupIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
      SubnetIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
        - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:NODEJS_LAYER}}"
        - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
    AutoPublishAlias: live
    Environment:
      Variables:
        NODE_OPTIONS: --enable-source-maps
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: true
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn: !FindInMap [Dynatrace, SecretArn, !Ref Environment]

Resources:
  RedactionLogStreamTrackingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-redaction-logstream-tracking
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: logStreamName
          AttributeType: S
      KeySchema:
        - AttributeName: logStreamName
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: expiryDate
        Enabled: true

  StubTokenRefreshScheduler:
    Type: AWS::Scheduler::Schedule
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub ${AWS::StackName}-stub
      Description: OTG refresh schedule for the stub token
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(10 minutes)
      State: ENABLED
      Target:
        Arn: !Ref OAuthTokenStateMachine
        Input: '{ "tokenType": "stub" }'
        RetryPolicy:
          MaximumEventAgeInSeconds: 86400
          MaximumRetryAttempts: 185
        RoleArn: !GetAtt RefreshSchedulerRole.Arn

  SandboxTokenRefreshScheduler:
    Type: AWS::Scheduler::Schedule
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub ${AWS::StackName}-sandbox
      Description: OTG refresh schedule for the sandbox token
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(10 minutes)
      State: ENABLED
      Target:
        Arn: !Ref OAuthTokenStateMachine
        Input: '{ "tokenType": "sandbox" }'
        RetryPolicy:
          MaximumEventAgeInSeconds: !FindInMap [SchedulerConfig, !Ref Environment, RetryDelaySeconds]
          MaximumRetryAttempts: !FindInMap [SchedulerConfig, !Ref Environment, NumRetries]
        RoleArn: !GetAtt RefreshSchedulerRole.Arn
        DeadLetterConfig:
          Arn: !GetAtt SandboxTokenDeadLetterQueue.Arn

  SandboxTokenDeadLetterQueueEncryptionKey:
    Type: AWS::KMS::Key
    Condition: IsNotProdEnvironment
    Properties:
      Description: Symmetric key used to encrypt audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-sandboxTokenDeadLetterQueueEncryptionKey
        - Key: AwsStackName
          Value: !Ref AWS::StackName
        - Key: Source
          Value: govuk-one-login/ipv-cri-otg-hmrc/infrastructure/template.yaml

  SandboxTokenDeadLetterQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Condition: IsNotProdEnvironment
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/sandboxTokenDeadLetterQueueEncryptionKey
      TargetKeyId: !Ref SandboxTokenDeadLetterQueueEncryptionKey

  SandboxTokenDeadLetterQueue:
    Type: AWS::SQS::Queue
    Condition: IsNotProdEnvironment
    Properties:
      KmsMasterKeyId: !Ref SandboxTokenDeadLetterQueueEncryptionKeyAlias
      MessageRetentionPeriod: 1800
      QueueName: !Sub ${AWS::StackName}-sandbox-dlq
      ReceiveMessageWaitTimeSeconds: 20
      SqsManagedSseEnabled: False
      VisibilityTimeout: 60

  SandboxTokenRefreshSchedulerAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployNonProdAlarms
    Properties:
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub
        - "Alarm if token refresh queue grows beyond 0 messages. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt SandboxTokenDeadLetterQueue.QueueName
      EvaluationPeriods: 1
      InsufficientDataActions:
        - !ImportValue platform-alarm-warning-alert-topic
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      Threshold: 0

  ProductionTokenRefreshScheduler:
    Type: AWS::Scheduler::Schedule
    Condition: IsProdEnvironment
    Properties:
      Name: !Sub ${AWS::StackName}-production
      Description: OTG refresh schedule for the production token
      FlexibleTimeWindow:
        Mode: "OFF"
      ScheduleExpression: rate(10 minutes)
      State: ENABLED
      Target:
        Arn: !Ref OAuthTokenStateMachine
        Input: '{ "tokenType": "production" }'
        RetryPolicy:
          MaximumEventAgeInSeconds: !FindInMap [SchedulerConfig, !Ref Environment, RetryDelaySeconds]
          MaximumRetryAttempts: !FindInMap [SchedulerConfig, !Ref Environment, NumRetries]
        RoleArn: !GetAtt RefreshSchedulerRole.Arn
        DeadLetterConfig:
          Arn: !GetAtt ProductionTokenDeadLetterQueue.Arn

  ProductionTokenDeadLetterQueueEncryptionKey:
    Type: AWS::KMS::Key
    Condition: IsProdEnvironment
    Properties:
      Description: Symmetric key used to encrypt audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable Root access
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-productionTokenDeadLetterQueueEncryptionKey
        - Key: AwsStackName
          Value: !Ref AWS::StackName
        - Key: Source
          Value: govuk-one-login/ipv-cri-otg-hmrc/infrastructure/template.yaml

  ProductionTokenDeadLetterQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Condition: IsProdEnvironment
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/productionTokenDeadLetterQueueEncryptionKey
      TargetKeyId: !Ref ProductionTokenDeadLetterQueueEncryptionKey

  ProductionTokenDeadLetterQueue:
    Type: AWS::SQS::Queue
    Condition: IsProdEnvironment
    Properties:
      KmsMasterKeyId: !Ref ProductionTokenDeadLetterQueueEncryptionKeyAlias
      MessageRetentionPeriod: 1800
      QueueName: !Sub ${AWS::StackName}-production-dlq
      ReceiveMessageWaitTimeSeconds: 20
      SqsManagedSseEnabled: False
      VisibilityTimeout: 60

  ProductionTokenRefreshSchedulerAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsProdEnvironment
    Properties:
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub
        - "Alarm if token refresh queue grows beyond 0 messages. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: QueueName
          Value: !GetAtt ProductionTokenDeadLetterQueue.QueueName
      EvaluationPeriods: 1
      InsufficientDataActions:
        - !ImportValue platform-alarm-warning-alert-topic
      MetricName: ApproximateNumberOfMessagesVisible
      Namespace: AWS/SQS
      Period: 300
      Statistic: Sum
      Threshold: 0

  RefreshSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-RefreshSchedulerRole
      Description: Role to allow EventBridge to run a state machine
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: scheduler.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref OAuthTokenStateMachine
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution

  StubOAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub /${AWS::StackName}/HMRC/OAuthURL/stub
      Type: String
      Value: !Sub
        - ${stubUrl}/oauth/token
        - stubUrl: !ImportValue third-party-stubs-ImposterStubApiUrl
      Description: Imposter Mock of HMRC OAuth URL

  SandboxOAuthUrlParameter:
    Type: AWS::SSM::Parameter
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub /${AWS::StackName}/HMRC/OAuthURL/sandbox
      Type: String
      Value: !Ref SandboxOAuthUrl
      Description: HMRC Sandbox OAuth URL

  ProductionOAuthUrlParameter:
    Condition: IsProdEnvironment
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /${AWS::StackName}/HMRC/OAuthURL/production
      Type: String
      Value: !Ref ProductionOAuthUrl
      Description: HMRC Production OAuth URL

  PrivateOTGApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Private OAuth Token Generator API
      MethodSettings:
        - LoggingLevel: INFO
          ResourcePath: "/*"
          HttpMethod: "*"
          DataTraceEnabled: true
          MetricsEnabled: true
          ThrottlingRateLimit: 200
          ThrottlingBurstLimit: 400
      AccessLogSetting:
        DestinationArn: !GetAtt PrivateOTGApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            path: $context.path
            routeKey: $context.routeKey
            status: $context.status
            protocol: $context.protocol
            responseLatency: $context.responseLatency
            responseLength: $context.responseLength
      TracingEnabled: true
      Name: !Sub ${AWS::StackName}-private
      StageName: !Ref Environment
      DefinitionBody:
        openapi: 3.0.1
        paths:
          /never-created:
            options: {}
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: private-api.yaml
      OpenApiVersion: 3.0.1
      EndpointConfiguration:
        Type: !If [IsLocalDevEnvironment, REGIONAL, PRIVATE]
      Auth:
        ResourcePolicy: !If
          - IsLocalDevEnvironment
          - !Ref AWS::NoValue
          - CustomStatements:
              - Effect: Allow
                Action: execute-api:Invoke
                Resource: execute-api:/*
                Principal: "*"
                Condition:
                  StringEquals:
                    aws:SourceVpce: !Split
                      - ","
                      - !Join
                        - ","
                        - - !Ref AllowedVpcEndpointIds
                          - !If
                            - IsNotProdOrIntegrationEnvironment
                            - Fn::ImportValue: !Sub ${VpcStackName}-ExecuteApiGatewayEndpointId
                            - !Ref AWS::NoValue

  PrivateOTGApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/apigateway/${AWS::StackName}-${PrivateOTGApi}-private-AccessLogs
      RetentionInDays: 30

  PrivateOTGApiAccessLogSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      FilterPattern: ""
      LogGroupName: !Ref PrivateOTGApiAccessLogGroup
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]

  PrivateOTGApiFatalErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref PrivateOTGApiAccessLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricName: PrivateOTGApi-FatalError

  PrivateOTGApiFatalErrorAlarm:
    DependsOn: PrivateOTGApiFatalErrorMetricFilter
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-PrivateOTGApi-FatalErrorAlarm
      AlarmDescription: !Sub
        - "Alarm for when a fatal error occurs in the PrivateOTGApi. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: PrivateOTGApi-FatalError
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BearerTokenHandlerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/bearer-token-handler/src/bearer-token-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Ref BearerTokenHandlerFunctionLogGroup
      CodeSigningConfigArn: !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      Policies:
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/TOTPSecret/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/ClientSecret/*
        - AWSSecretsManagerGetSecretValuePolicy:
            SecretArn: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/ClientId/*

  BearerTokenHandlerFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction
      RetentionInDays: 30

  BearerTokenHandlerFunctionLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      FilterPattern: ""
      LogGroupName: !Ref BearerTokenHandlerFunctionLogGroup
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]

  # BearerTokenHandlerFunction Alarms
  BearerTokenHandlerFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BearerTokenHandlerFunctionLogGroup
      FilterPattern: '{ $.level = "ERROR" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricName: BearerTokenHandlerFunction-Error

  BearerTokenHandlerFunctionErrorAlarm:
    DependsOn: BearerTokenHandlerFunctionErrorMetricFilter
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-BearerTokenHandlerFunction-ErrorAlarm
      AlarmDescription: !Sub
        - "Alarm for errors in the BearerTokenHandlerFunction. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: BearerTokenHandlerFunction-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 120
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BearerTokenHandlerFunctionFatalErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BearerTokenHandlerFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricName: BearerTokenHandlerFunction-FatalError

  BearerTokenHandlerFunctionFatalErrorAlarm:
    DependsOn: BearerTokenHandlerFunctionFatalErrorMetricFilter
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-BearerTokenHandlerFunction-FatalErrorAlarm
      AlarmDescription: !Sub
        - "Alarm for a fatal error in the BearerTokenHandlerFunction. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: BearerTokenHandlerFunction-FatalError
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  BearerTokenHandlerFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      AlarmDescription: !Sub
        - "Trigger if the ${BearerTokenHandlerFunction} lambda throttles. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      AlarmName: !Sub ${AWS::StackName}-${Environment}-BearerTokenHandlerFunction-throttles
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref BearerTokenHandlerFunction
      TreatMissingData: notBreaching
      Period: 60 # This is the minimum value for the AWS Namespace
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  SecretsManagerHandlerEncryptionKey:
    Type: AWS::KMS::Key
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: Symmetric key used to encrypt secrets manager token. Used with an alias.
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: AccessForPipelineRole
            Effect: Allow
            Resource: "*"
            Action: "kms:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/GitHubPreMergeRole-otg-hmrc*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/PL-otg-hmrc-service-pl-DeployRole*"
          - Sid: AccessForStateMachine
            Effect: Allow
            Resource: "*"
            Principal:
              AWS: [
                !GetAtt LogRedactionFunctionRole.Arn,
                !GetAtt BearerTokenHandlerFunctionRole.Arn
              ]
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
          - Sid: AccessForLogs
            Effect: Allow
            Resource: "*"
            Principal:
              Service: logs.eu-west-2.amazonaws.com
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Condition:
              ArnEquals:
                "kms:EncryptionContext:aws:logs:arn":
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}/LogRedactionFunction"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction"
          - Sid: ElevatedAdminAccess
            Effect: Allow
            Resource: "*"
            Action: "kms:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ApprovedAdmin*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_AdministratorAccessPermission*"

          - Sid: DenyAllOthers
            Effect: Deny
            Resource: "*"
            Action: "kms:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringNotLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/GitHubPreMergeRole-otg-hmrc*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/PL-otg-hmrc-service-pl-DeployRole*"
                  - !GetAtt BearerTokenHandlerFunctionRole.Arn
                  - !GetAtt LogRedactionFunctionRole.Arn
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ApprovedAdmin*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_AdministratorAccessPermission*"
              ArnNotLike:
                "kms:EncryptionContext:aws:logs:arn":
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}/LogRedactionFunction"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}/BearerTokenHandlerFunction"
      Tags:
        - Key: Name
          Value: !Join
            - "-"
            - - !Ref AWS::StackName
              - "SecretsManagerHandlerEncryptionKey"
        - Key: Service
          Value: "ci/cd"
        - Key: Source
          Value: "govuk-one-login/di-ipv-cri-otg-hmrc/infrastructure/template.yaml"

  SecretsManagerHandlerEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/secretsmanager/token-${AWS::StackName}
      TargetKeyId: !GetAtt SecretsManagerHandlerEncryptionKey.Arn

  ###########
  # Secrets #
  ###########

  BearerTokenStub:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/BearerToken/${AWS::StackName}/stub
      SecretString: "{\"token\":\"goodToken\",\"tokenExpiry\":\"1726568475877\",\"tokenExpiryInMinutes\":\"120\"}"

  BearerTokenSandbox:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub HMRC/BearerToken/${AWS::StackName}/sandbox

  BearerTokenMonitoring:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/BearerToken/${AWS::StackName}/monitoring

  BearerTokenProduction: # Actual secrets value to be added manually by a tech lead via clickops (Do not add/edit the value in this template)
    Type: AWS::SecretsManager::Secret
    Condition: IsProdEnvironment
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub HMRC/BearerToken/${AWS::StackName}/production

  ClientIdStub:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/ClientId/${AWS::StackName}/stub
      SecretString: stub

  ClientIdSandbox:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub HMRC/ClientId/${AWS::StackName}/sandbox

  ClientIdMonitoring:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/ClientId/${AWS::StackName}/monitoring

  ClientIdProduction: # Actual secrets value to be added manually by a tech lead via clickops (Do not add/edit the value in this template)
    Type: AWS::SecretsManager::Secret
    Condition: IsProdEnvironment
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub HMRC/ClientId/${AWS::StackName}/production

  ClientSecretStub:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/ClientSecret/${AWS::StackName}/stub
      SecretString: 11111-1111-1111-111111111111

  ClientSecretSandbox:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdEnvironment
    Properties:
      Name: !Sub HMRC/ClientSecret/${AWS::StackName}/sandbox

  ClientSecretMonitoring:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/ClientSecret/${AWS::StackName}/monitoring

  ClientSecretProduction: # Actual secrets value to be added manually by a tech lead via clickops (Do not add/edit the value in this template)
    Type: AWS::SecretsManager::Secret
    Condition: IsProdEnvironment
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub HMRC/ClientSecret/${AWS::StackName}/production

  TOTPSecretStub:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/TOTPSecret/${AWS::StackName}/stub
      SecretString: ABCDEFGHIJKLMNOP

  TOTPSecretSandbox:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdEnvironment
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub HMRC/TOTPSecret/${AWS::StackName}/sandbox
      KmsKeyId: !GetAtt SecretsManagerHandlerEncryptionKey.Arn
      Description: "TOTP Secret - encrypted via CMK, with restricted permissions for sandbox and prod environments"

  TOTPSecretMonitoring:
    Type: AWS::SecretsManager::Secret
    Condition: IsNotProdOrIntegrationEnvironment
    Properties:
      Name: !Sub HMRC/TOTPSecret/${AWS::StackName}/monitoring

  TOTPSecretProduction: # Actual secrets value to be added manually by a tech lead via clickops (Do not add/edit the value in this template)
    Type: AWS::SecretsManager::Secret
    Condition: IsProdEnvironment
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !Sub HMRC/TOTPSecret/${AWS::StackName}/production
      KmsKeyId: !GetAtt SecretsManagerHandlerEncryptionKey.Arn
      Description: "TOTP Secret - encrypted via CMK, with restricted permissions for sandbox and prod environment"

  TOTPSecretPolicySandbox:
    Condition: IsNotProdEnvironment
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      BlockPublicPolicy: false
      SecretId: !GetAtt TOTPSecretSandbox.Id
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AccessForPipelineRole
            Effect: Allow
            Resource: !Ref TOTPSecretSandbox
            Action: "secretsmanager:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/GitHubPreMergeRole-otg-hmrc*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/PL-otg-hmrc-service-pl-DeployRole*"
          - Sid: AllowBearerTokenHandlerFunction
            Effect: "Allow"
            Resource: !Ref TOTPSecretSandbox
            Action: "secretsmanager:*"
            Principal:
              AWS: !GetAtt BearerTokenHandlerFunctionRole.Arn
          - Sid: ElevatedAdminAccess
            Effect: Allow
            Resource: !Ref TOTPSecretSandbox
            Action: "secretsmanager:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ApprovedAdmin*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_AdministratorAccessPermission*"
          - Sid: DenyAllOthers
            Effect: "Deny"
            Resource: !Ref TOTPSecretSandbox
            Action: "secretsmanager:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringNotLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/GitHubPreMergeRole-otg-hmrc*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/PL-otg-hmrc-service-pl-DeployRole*"
                  - !GetAtt BearerTokenHandlerFunctionRole.Arn
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ApprovedAdmin*"
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_AdministratorAccessPermission*"

  TOTPSecretPolicy:
    Condition: IsProdEnvironment
    Type: AWS::SecretsManager::ResourcePolicy
    Properties:
      BlockPublicPolicy: false
      SecretId: !GetAtt TOTPSecretProduction.Id
      ResourcePolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: AccessForPipelineRole
            Effect: Allow
            Resource: !Ref TOTPSecretProduction
            Action: "secretsmanager:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/PL-otg-hmrc-service-pl-DeployRole*"
          - Sid: AllowBearerTokenHandlerFunction
            Effect: "Allow"
            Resource: !Ref TOTPSecretProduction
            Action: "secretsmanager:*"
            Principal:
              AWS: !GetAtt BearerTokenHandlerFunctionRole.Arn
          - Sid: ElevatedAdminAccess
            Effect: Allow
            Resource: !Ref TOTPSecretProduction
            Action: "secretsmanager:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ApprovedAdmin*"
          - Sid: DenyAllOthers
            Effect: "Deny"
            Resource: !Ref TOTPSecretProduction
            Action: "secretsmanager:*"
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Condition:
              StringNotLike:
                "aws:PrincipalArn":
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/PL-otg-hmrc-service-pl-DeployRole*"
                  - !GetAtt BearerTokenHandlerFunctionRole.Arn
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/${AWS::Region}/AWSReservedSSO_ApprovedAdmin*"

  OAuthTokenStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${AWS::StackName}-OAuthTokenGenerator
      DefinitionUri: ../step-functions/oauth-token-generator.asl.json
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
      DefinitionSubstitutions:
        BearerTokenFunctionArn: !GetAtt BearerTokenHandlerFunction.Arn
        StackName: !Ref AWS::StackName
        RefreshSchedulerRole: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-RefreshSchedulerRole
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt OAuthTokenStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref BearerTokenHandlerFunction
        - Statement:
            - Effect: Allow
              Action: ssm:GetParameter
              Resource: !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter*/HMRC/OAuthURL/*
        - Statement:
            - Effect: Allow
              Action: secretsmanager:PutSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*
        - Statement:
            - Effect: Allow
              Action: scheduler:UpdateSchedule
              Resource: !Sub arn:aws:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*
        - Statement:
            - Effect: Allow
              Action: iam:PassRole
              Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/${AWS::StackName}-RefreshSchedulerRole
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"

  OAuthTokenStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-OAuth-state-machine-logs
      RetentionInDays: 30
      KmsKeyId: !If [IsProdEnvironment, !GetAtt SecretsManagerHandlerEncryptionKey.Arn, !Ref AWS::NoValue]

  OAuthTokenStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      FilterPattern: ""
      LogGroupName: !Ref RedactedOAuthTokenStateMachineLogGroup
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]

  OAuthTokenStateMachineFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup
      FilterPattern: '{($.type = "ExecutionFailed")}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: OAuthTokenStateMachine-Error
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages

  OAuthTokenStateMachineAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmDescription: !Sub
        - "OAuth Token failed 4 or more requests in the last hour. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      AlarmName: !Sub ${AWS::StackName}-${Environment}-OAuth-state-machine-alarms
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      MetricName: ExecutionsFailed
      Namespace: AWS/States
      Period: 3600
      Statistic: Sum
      Threshold: 3
      TreatMissingData: notBreaching
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref OAuthTokenStateMachine

  BearerTokenRetrievalStateMachine:
    Type: AWS::Serverless::StateMachine
    Properties:
      Type: EXPRESS
      Name: !Sub ${AWS::StackName}-BearerTokenRetrieval
      DefinitionUri: ../step-functions/bearer-token-retrieval.asl.json
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
      DefinitionSubstitutions:
        StackName: !Ref AWS::StackName
      Logging:
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt BearerTokenRetrievalStateMachineLogGroup.Arn
        IncludeExecutionData: True
        Level: ALL
      AutoPublishAlias: live
      DeploymentPreference:
        Type: !Ref StepFunctionsDeploymentPreference
        Interval: !If [IsProdEnvironment, 10, 5]
        Percentage: !If [IsProdEnvironment, 10, 50]
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - - !Ref BearerTokenRetrievalStateMachineExecutionFailedCanaryAlarm
            - !Ref BearerTokenRetrievalStateMachineTaskFailedCanaryAlarm
          - !Ref AWS::NoValue
        StateMachineVersionArn: !Sub "arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${BearerTokenRetrievalStateMachine}:live"
      Policies:
        - Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:HMRC/BearerToken/*
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"

  BearerTokenRetrievalStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-BearerTokenRetrieval-state-machine-logs
      RetentionInDays: 30

  BearerTokenRetrievalStateMachineLogsSubscriptionFilterCSLS:
    Type: AWS::Logs::SubscriptionFilter
    Condition: IsNotDevLikeEnvironment
    Properties:
      FilterPattern: ""
      LogGroupName: !Ref RedactedBearerTokenRetrievalStateMachineLogGroup
      DestinationArn: !FindInMap [PlatformConfiguration, !Ref Environment, CSLSEGRESS]

  BearerTokenRetrievalStateMachineTaskFailedMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref BearerTokenRetrievalStateMachineLogGroup
      FilterPattern: '{$.type = "TaskFailed"}'
      MetricTransformations:
        - MetricValue: "1"
          MetricName: "BearerTokenRetrievalStateMachineTaskFailed"
          MetricNamespace: !Sub "${AWS::StackName}/LogMessages"

  BearerTokenRetrievalStateMachineAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      AlarmDescription: !Sub
        - "Bearer Token failed 4 or more requests in the last hour. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      AlarmName: !Sub ${AWS::StackName}-${Environment}-BearerTokenRetrievalStateMachineAlarm
      ComparisonOperator: GreaterThanThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      MetricName: ExecutionsFailed
      Namespace: AWS/States
      Period: 3600
      Statistic: Sum
      Threshold: 3
      TreatMissingData: notBreaching
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref BearerTokenRetrievalStateMachine

  BearerTokenRetrievalStateMachineExecutionFailedCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmName: !Sub ${AWS::StackName}-${Environment}-BearerTokenRetrieval-ExecutionFailedCanaryAlarm
      AlarmDescription: !Sub "ExecutionFailed error returned from the BearerTokenRetrievalStateMachine"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: ExecutionsFailed
      Namespace: AWS/States
      Period: 60
      Statistic: Sum
      Threshold: 1
      TreatMissingData: notBreaching
      Dimensions:
        - Name: StateMachineArn
          Value: !Ref BearerTokenRetrievalStateMachine

  BearerTokenRetrievalStateMachineTaskFailedCanaryAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmName: !Sub ${AWS::StackName}-${Environment}-BearerTokenRetrieval-TaskFailedCanaryAlarm
      AlarmDescription: !Sub "TaskFailed error returned from the BearerTokenRetrievalStateMachine"
      MetricName: "BearerTokenRetrievalStateMachineTaskFailed"
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ExecuteStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      Description: Role to allow API gateway to execute step function
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: apigateway.amazonaws.com
      Policies:
        - PolicyName: AllowStateMachineInvoke
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Resource: !Ref BearerTokenRetrievalStateMachine
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution

  SuccessTokenGenerationMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup
      FilterPattern: '{($.details.name = "Success")}'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: otg-hmrc-service
          MetricName: SuccessfulTokenGenerationMetric

  FailTokenGenerationMetric:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup
      FilterPattern: '{($.details.name = "Fail")}'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: otg-hmrc-service
          MetricName: FailTokenGenerationMetric

  # BackEnd5xxAlarms
  5XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-5XXErrorAlarm
      AlarmDescription: !Sub
        - "There has been a small proportion of 5XX errors on the otg api-gateway. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum

  5XXErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-5XXErrorCriticalAlarm
      AlarmDescription: !Sub
        - "There has been a significant proportion of 5XX errors on the otg api-gateway. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-Token5XXApiGwErrorAlarm
      AlarmDescription: !Sub
        - "There has been a small proportion of 5XX errors on the Token endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  Token5XXApiGwErrorCriticalAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-Token5XXApiGwErrorCriticalAlarm
      AlarmDescription: !Sub
        - "There has been a significant proportion of 5XX errors on the Token endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-pagerduty-alert-topic
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 80
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  # BackEnd4xxAlarms
  4XXErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-4XXErrorAlarm
      AlarmDescription: !Sub
        - "There has been a small proportion of 4XX errors on the otg api-gateway. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<10,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum

  Token4XXApiGwErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-Token4XXApiGwErrorAlarm
      AlarmDescription: !Sub
        - "There has been a small proportion of 4XX errors on the Token endpoint. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<4 || error<2,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations)*100
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 4XXError
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
                - Name: Resource
                  Value: /token
                - Name: Stage
                  Value: !Ref Environment
                - Name: Method
                  Value: GET
            Period: 60
            Stat: Sum

  # BackEndLatencyAlarm
  LatencyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-apiGWLatencyAlarm
      AlarmDescription: !Sub
        - "There has been increased latency on backend api-gateway. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      EvaluationPeriods: 5
      DatapointsToAlarm: 2
      Threshold: 2500
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: safeLatency
          Label: safeLatency
          ReturnData: true
          Expression: IF(invocations<10,0,maxLatency)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Sum
        - Id: maxLatency
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Latency
              Dimensions:
                - Name: ApiName
                  Value: !Sub ${AWS::StackName}-private
            Period: 60
            Stat: Maximum

  #############
  # Redaction #
  #############
  LogRedactionFunctionCloudWatchPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LogRedactionFunction.Arn
      Action: lambda:InvokeFunction
      Principal: !Join [".", ["logs", !Ref "AWS::Region", "amazonaws.com"]]
      SourceAccount: !Ref AWS::AccountId

  LogRedactionFunctionCloudWatchAliasPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LogRedactionFunction.Alias
      Action: lambda:InvokeFunction
      Principal: !Join [".", ["logs", !Ref "AWS::Region", "amazonaws.com"]]
      SourceAccount: !Ref AWS::AccountId

  LogRedactionFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Sourcemap: true
    Properties:
      Handler: lambdas/log-redaction/src/redact-handler.lambdaHandler
      LoggingConfig:
        LogGroup: !Ref LogRedactionFunctionLogGroup
      CodeSigningConfigArn: !If [EnforceCodeSigning, !Ref CodeSigningConfigArn, !Ref AWS::NoValue]
      DeploymentPreference:
        Type: !Ref LambdaDeploymentPreference
        Alarms: !If
          - UseCanaryDeploymentAlarms
          - [!Ref LogRedactionFunctionCanaryErrorAlarm]
          - [!Ref AWS::NoValue]
        Role: !GetAtt CodeDeployServiceRole.Arn
      Environment:
        Variables:
          RedactionLogStreamTrackingTable: !Ref RedactionLogStreamTrackingTable
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RedactionLogStreamTrackingTable
        - Statement:
            Effect: Allow
            Action: logs:*
            Resource: "*"
        - Statement:
            Effect: Allow
            Action: lambda:*
            Resource: "*"

  LogRedactionFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AWS::StackName}/LogRedactionFunction
      RetentionInDays: 30

  LogRedactionFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogRedactionFunctionLogGroup
      FilterPattern: '{ $.level = "ERROR" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricName: LogRedactionFunction-Error

  LogRedactionFunctionErrorAlarm:
    DependsOn: LogRedactionFunctionErrorMetricFilter
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-LogRedactionFunction-ErrorAlarm
      AlarmDescription: !Sub
        - "Alarm for when errors occur in the LogRedactionFunction. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: LogRedactionFunction-Error
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Period: 120
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 3
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  LogRedactionFunctionFatalErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      LogGroupName: !Ref LogRedactionFunctionLogGroup
      FilterPattern: '{ $.level = "FATAL" || $.message = "Unhandled Exception:*" }'
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: !Sub ${AWS::StackName}/LogMessages
          MetricName: LogRedactionFunction-FatalError

  LogRedactionFunctionFatalErrorAlarm:
    DependsOn: LogRedactionFunctionFatalErrorMetricFilter
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      AlarmName: !Sub ${AWS::StackName}-${Environment}-LogRedactionFunction-FatalErrorAlarm
      AlarmDescription: !Sub
        - "Alarm for when a fatal error occurs in the LogRedactionFunction. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      ActionsEnabled: true
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      InsufficientDataActions: []
      MetricName: LogRedactionFunction-FatalError
      Namespace: !Sub ${AWS::StackName}/LogMessages
      Statistic: Sum
      Dimensions: []
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  LogRedactionFunctionThrottleAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: DeployAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-critical-alert-topic
      OKActions:
        - !ImportValue platform-alarm-critical-alert-topic
      InsufficientDataActions: []
      AlarmDescription: !Sub
        - "Trigger if the ${LogRedactionFunction} lambda throttles. Runbook: ${SupportManualURL}"
        - SupportManualURL: !FindInMap [StaticVariables, Urls, SupportManualURL]
      AlarmName: !Sub ${AWS::StackName}-${Environment}-LogRedactionFunction-throttles
      MetricName: Throttles
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref LogRedactionFunction
      TreatMissingData: notBreaching
      Period: 60
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold

  LogRedactionFunctionCanaryErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: UseCanaryDeploymentAlarms
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !ImportValue platform-alarm-warning-alert-topic
      OKActions:
        - !ImportValue platform-alarm-warning-alert-topic
      AlarmDescription: !Sub "Error returned from the LogRedactionFunction Lambda."
      AlarmName: !Sub ${AWS::StackName}-${Environment}-LogRedactionFunction-CanaryErrorAlarm
      MetricName: Errors
      Dimensions:
        - Name: Resource
          Value: !Sub ${LogRedactionFunction}:live
        - Name: FunctionName
          Value: !Ref LogRedactionFunction
        - Name: ExecutedVersion
          Value: !GetAtt LogRedactionFunction.Version.Version
      Namespace: AWS/Lambda
      Statistic: Sum
      Unit: Count
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

  ###################################
  # Log Groups for Splunk (Redacted) #
  ###################################

  RedactedOAuthTokenStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-OAuth-state-machine-logs-redacted
      RetentionInDays: 30

  OAuthTokenStateMachineLogsSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: LogRedactionFunctionCloudWatchAliasPermissions
    Properties:
      FilterName: "Redaction"
      DestinationArn: !Ref LogRedactionFunction.Alias
      FilterPattern: ""
      LogGroupName: !Ref OAuthTokenStateMachineLogGroup

  RedactedBearerTokenRetrievalStateMachineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/vendedlogs/states/${AWS::StackName}-BearerTokenRetrieval-state-machine-logs-redacted
      RetentionInDays: 30

  BearerTokenRetrievalStateMachineSubscriptionFilter:
    Type: AWS::Logs::SubscriptionFilter
    DependsOn: LogRedactionFunctionCloudWatchAliasPermissions
    Properties:
      FilterName: "Redaction"
      DestinationArn: !Ref LogRedactionFunction.Alias
      FilterPattern: ""
      LogGroupName: !Ref BearerTokenRetrievalStateMachineLogGroup

  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary: !If [UsePermissionsBoundary, !Ref PermissionsBoundary, !Ref AWS::NoValue]

Outputs:
  PrivateApiGatewayId:
    Description: Private API Gateway ID for OAuth Token Generator
    Value: !Ref PrivateOTGApi
    Export:
      Name: !Sub ${AWS::StackName}-PrivateApiGatewayId
  OAuthTokenStateMachineArn:
    Description: OTG state machine ARN
    Value: !Ref OAuthTokenStateMachine
  BearerTokenRetrievalStateMachineArn:
    Description: Bearer Token Retrieval state machine ARN
    Value: !Ref BearerTokenRetrievalStateMachine
